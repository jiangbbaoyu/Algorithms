package com.jby.algorithms.Q03_arrayAlgorithms;

/**
 * 剑指 Offer 29. 顺时针打印矩阵 （螺旋矩阵）
 * 输入一个矩阵，按照从外向里以顺时针的顺序依次打印出每一个数字。
 * 思路： 1） 确定圈数
 *       2） 确定每一圈的 （left, up） (right,bottom) 两个点的坐标
 *       3） 遍历四条边上的元素
 */


/**
 * 剑指 Offer 39. 数组中出现次数超过一半的数字
 * 数组中有一个数字出现的次数 超过数组长度的一半，请找出这个数字
 * 思路：
 *  遍历数组时保存两个值，一个是数组中的一个元素 res，一个是该元素出现次数 count
 *  如果count==0,则res替换为新的值，count重新赋值为1
 *  否则
 *      当元素 与res相同，则count++
 *      当元素与res不同，则count--;

 * 当数组遍历结束时，如果数组中存在一个出现次数超过数组长度一半的元素，则res就是该值
 */


/**
 * 剑指 Offer 40. 数组中最小的k个数 (最小的第k个数，思路类似)
 * 输入整数数组 arr ，找出其中最小的 k 个数。例如，输入4、5、1、6、2、7、3、8这8个数字，则最小的4个数字是1、2、3、4
 * 思路：基于 快排的 partition 函数, 当 bounds 包含了 k-1, 则返回nums[k-1]
 *      基于 `大根堆` 保存数组中 `最小的k个数`
 */


/**
 * 剑指 Offer 66. 构建乘积数组
 * 给定一个数组 A[0,1,…,n-1]，请构建一个数组 B[0,1,…,n-1]，其中 B[i] 的值是数组 A 中除了下标 i 以外的元素的积,
 * 即 B[i]=A[0]×A[1]×…×A[i-1]×A[i+1]×…×A[n-1]。不能使用除法
 */









public class Questions_JianzhiOffer {
}
